/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
export const CertificateListResult = {
    type: {
        name: "Composite",
        className: "CertificateListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CertificateItem"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CertificateItem = {
    type: {
        name: "Composite",
        className: "CertificateItem",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            attributes: {
                serializedName: "attributes",
                type: {
                    name: "Composite",
                    className: "CertificateAttributes"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            x509Thumbprint: {
                serializedName: "x5t",
                type: {
                    name: "Base64Url"
                }
            }
        }
    }
};
export const Attributes = {
    type: {
        name: "Composite",
        className: "Attributes",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            notBefore: {
                serializedName: "nbf",
                type: {
                    name: "UnixTime"
                }
            },
            expires: {
                serializedName: "exp",
                type: {
                    name: "UnixTime"
                }
            },
            created: {
                serializedName: "created",
                readOnly: true,
                type: {
                    name: "UnixTime"
                }
            },
            updated: {
                serializedName: "updated",
                readOnly: true,
                type: {
                    name: "UnixTime"
                }
            }
        }
    }
};
export const KeyVaultError = {
    type: {
        name: "Composite",
        className: "KeyVaultError",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorModel"
                }
            }
        }
    }
};
export const ErrorModel = {
    type: {
        name: "Composite",
        className: "ErrorModel",
        modelProperties: {
            code: {
                serializedName: "code",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            innerError: {
                serializedName: "innererror",
                type: {
                    name: "Composite",
                    className: "ErrorModel"
                }
            }
        }
    }
};
export const CertificateBundle = {
    type: {
        name: "Composite",
        className: "CertificateBundle",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            kid: {
                serializedName: "kid",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            sid: {
                serializedName: "sid",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            x509Thumbprint: {
                serializedName: "x5t",
                readOnly: true,
                type: {
                    name: "Base64Url"
                }
            },
            policy: {
                serializedName: "policy",
                type: {
                    name: "Composite",
                    className: "CertificatePolicy"
                }
            },
            cer: {
                serializedName: "cer",
                type: {
                    name: "ByteArray"
                }
            },
            contentType: {
                serializedName: "contentType",
                type: {
                    name: "String"
                }
            },
            attributes: {
                serializedName: "attributes",
                type: {
                    name: "Composite",
                    className: "CertificateAttributes"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const CertificatePolicy = {
    type: {
        name: "Composite",
        className: "CertificatePolicy",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            keyProperties: {
                serializedName: "key_props",
                type: {
                    name: "Composite",
                    className: "KeyProperties"
                }
            },
            secretProperties: {
                serializedName: "secret_props",
                type: {
                    name: "Composite",
                    className: "SecretProperties"
                }
            },
            x509CertificateProperties: {
                serializedName: "x509_props",
                type: {
                    name: "Composite",
                    className: "X509CertificateProperties"
                }
            },
            lifetimeActions: {
                serializedName: "lifetime_actions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LifetimeAction"
                        }
                    }
                }
            },
            issuerParameters: {
                serializedName: "issuer",
                type: {
                    name: "Composite",
                    className: "IssuerParameters"
                }
            },
            attributes: {
                serializedName: "attributes",
                type: {
                    name: "Composite",
                    className: "CertificateAttributes"
                }
            }
        }
    }
};
export const KeyProperties = {
    type: {
        name: "Composite",
        className: "KeyProperties",
        modelProperties: {
            exportable: {
                serializedName: "exportable",
                type: {
                    name: "Boolean"
                }
            },
            keyType: {
                serializedName: "kty",
                type: {
                    name: "String"
                }
            },
            keySize: {
                serializedName: "key_size",
                type: {
                    name: "Number"
                }
            },
            reuseKey: {
                serializedName: "reuse_key",
                type: {
                    name: "Boolean"
                }
            },
            curve: {
                serializedName: "crv",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SecretProperties = {
    type: {
        name: "Composite",
        className: "SecretProperties",
        modelProperties: {
            contentType: {
                serializedName: "contentType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const X509CertificateProperties = {
    type: {
        name: "Composite",
        className: "X509CertificateProperties",
        modelProperties: {
            subject: {
                serializedName: "subject",
                type: {
                    name: "String"
                }
            },
            ekus: {
                serializedName: "ekus",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            subjectAlternativeNames: {
                serializedName: "sans",
                type: {
                    name: "Composite",
                    className: "SubjectAlternativeNames"
                }
            },
            keyUsage: {
                serializedName: "key_usage",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            validityInMonths: {
                constraints: {
                    InclusiveMinimum: 0
                },
                serializedName: "validity_months",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const SubjectAlternativeNames = {
    type: {
        name: "Composite",
        className: "SubjectAlternativeNames",
        modelProperties: {
            emails: {
                serializedName: "emails",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            dnsNames: {
                serializedName: "dns_names",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            upns: {
                serializedName: "upns",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const LifetimeAction = {
    type: {
        name: "Composite",
        className: "LifetimeAction",
        modelProperties: {
            trigger: {
                serializedName: "trigger",
                type: {
                    name: "Composite",
                    className: "Trigger"
                }
            },
            action: {
                serializedName: "action",
                type: {
                    name: "Composite",
                    className: "Action"
                }
            }
        }
    }
};
export const Trigger = {
    type: {
        name: "Composite",
        className: "Trigger",
        modelProperties: {
            lifetimePercentage: {
                constraints: {
                    InclusiveMaximum: 99,
                    InclusiveMinimum: 1
                },
                serializedName: "lifetime_percentage",
                type: {
                    name: "Number"
                }
            },
            daysBeforeExpiry: {
                serializedName: "days_before_expiry",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const Action = {
    type: {
        name: "Composite",
        className: "Action",
        modelProperties: {
            actionType: {
                serializedName: "action_type",
                type: {
                    name: "Enum",
                    allowedValues: ["EmailContacts", "AutoRenew"]
                }
            }
        }
    }
};
export const IssuerParameters = {
    type: {
        name: "Composite",
        className: "IssuerParameters",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            certificateType: {
                serializedName: "cty",
                type: {
                    name: "String"
                }
            },
            certificateTransparency: {
                serializedName: "cert_transparency",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const Contacts = {
    type: {
        name: "Composite",
        className: "Contacts",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            contactList: {
                serializedName: "contacts",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Contact"
                        }
                    }
                }
            }
        }
    }
};
export const Contact = {
    type: {
        name: "Composite",
        className: "Contact",
        modelProperties: {
            emailAddress: {
                serializedName: "email",
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            phone: {
                serializedName: "phone",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CertificateIssuerListResult = {
    type: {
        name: "Composite",
        className: "CertificateIssuerListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CertificateIssuerItem"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CertificateIssuerItem = {
    type: {
        name: "Composite",
        className: "CertificateIssuerItem",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            provider: {
                serializedName: "provider",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CertificateIssuerSetParameters = {
    type: {
        name: "Composite",
        className: "CertificateIssuerSetParameters",
        modelProperties: {
            provider: {
                serializedName: "provider",
                required: true,
                type: {
                    name: "String"
                }
            },
            credentials: {
                serializedName: "credentials",
                type: {
                    name: "Composite",
                    className: "IssuerCredentials"
                }
            },
            organizationDetails: {
                serializedName: "org_details",
                type: {
                    name: "Composite",
                    className: "OrganizationDetails"
                }
            },
            attributes: {
                serializedName: "attributes",
                type: {
                    name: "Composite",
                    className: "IssuerAttributes"
                }
            }
        }
    }
};
export const IssuerCredentials = {
    type: {
        name: "Composite",
        className: "IssuerCredentials",
        modelProperties: {
            accountId: {
                serializedName: "account_id",
                type: {
                    name: "String"
                }
            },
            password: {
                serializedName: "pwd",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const OrganizationDetails = {
    type: {
        name: "Composite",
        className: "OrganizationDetails",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            adminDetails: {
                serializedName: "admin_details",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AdministratorDetails"
                        }
                    }
                }
            }
        }
    }
};
export const AdministratorDetails = {
    type: {
        name: "Composite",
        className: "AdministratorDetails",
        modelProperties: {
            firstName: {
                serializedName: "first_name",
                type: {
                    name: "String"
                }
            },
            lastName: {
                serializedName: "last_name",
                type: {
                    name: "String"
                }
            },
            emailAddress: {
                serializedName: "email",
                type: {
                    name: "String"
                }
            },
            phone: {
                serializedName: "phone",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const IssuerAttributes = {
    type: {
        name: "Composite",
        className: "IssuerAttributes",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            created: {
                serializedName: "created",
                readOnly: true,
                type: {
                    name: "UnixTime"
                }
            },
            updated: {
                serializedName: "updated",
                readOnly: true,
                type: {
                    name: "UnixTime"
                }
            }
        }
    }
};
export const IssuerBundle = {
    type: {
        name: "Composite",
        className: "IssuerBundle",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            provider: {
                serializedName: "provider",
                type: {
                    name: "String"
                }
            },
            credentials: {
                serializedName: "credentials",
                type: {
                    name: "Composite",
                    className: "IssuerCredentials"
                }
            },
            organizationDetails: {
                serializedName: "org_details",
                type: {
                    name: "Composite",
                    className: "OrganizationDetails"
                }
            },
            attributes: {
                serializedName: "attributes",
                type: {
                    name: "Composite",
                    className: "IssuerAttributes"
                }
            }
        }
    }
};
export const CertificateIssuerUpdateParameters = {
    type: {
        name: "Composite",
        className: "CertificateIssuerUpdateParameters",
        modelProperties: {
            provider: {
                serializedName: "provider",
                type: {
                    name: "String"
                }
            },
            credentials: {
                serializedName: "credentials",
                type: {
                    name: "Composite",
                    className: "IssuerCredentials"
                }
            },
            organizationDetails: {
                serializedName: "org_details",
                type: {
                    name: "Composite",
                    className: "OrganizationDetails"
                }
            },
            attributes: {
                serializedName: "attributes",
                type: {
                    name: "Composite",
                    className: "IssuerAttributes"
                }
            }
        }
    }
};
export const CertificateCreateParameters = {
    type: {
        name: "Composite",
        className: "CertificateCreateParameters",
        modelProperties: {
            certificatePolicy: {
                serializedName: "policy",
                type: {
                    name: "Composite",
                    className: "CertificatePolicy"
                }
            },
            certificateAttributes: {
                serializedName: "attributes",
                type: {
                    name: "Composite",
                    className: "CertificateAttributes"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const CertificateOperation = {
    type: {
        name: "Composite",
        className: "CertificateOperation",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            issuerParameters: {
                serializedName: "issuer",
                type: {
                    name: "Composite",
                    className: "IssuerParameters"
                }
            },
            csr: {
                serializedName: "csr",
                type: {
                    name: "ByteArray"
                }
            },
            cancellationRequested: {
                serializedName: "cancellation_requested",
                type: {
                    name: "Boolean"
                }
            },
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            statusDetails: {
                serializedName: "status_details",
                type: {
                    name: "String"
                }
            },
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorModel"
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "request_id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CertificateImportParameters = {
    type: {
        name: "Composite",
        className: "CertificateImportParameters",
        modelProperties: {
            base64EncodedCertificate: {
                serializedName: "value",
                required: true,
                type: {
                    name: "String"
                }
            },
            password: {
                serializedName: "pwd",
                type: {
                    name: "String"
                }
            },
            certificatePolicy: {
                serializedName: "policy",
                type: {
                    name: "Composite",
                    className: "CertificatePolicy"
                }
            },
            certificateAttributes: {
                serializedName: "attributes",
                type: {
                    name: "Composite",
                    className: "CertificateAttributes"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const CertificateUpdateParameters = {
    type: {
        name: "Composite",
        className: "CertificateUpdateParameters",
        modelProperties: {
            certificatePolicy: {
                serializedName: "policy",
                type: {
                    name: "Composite",
                    className: "CertificatePolicy"
                }
            },
            certificateAttributes: {
                serializedName: "attributes",
                type: {
                    name: "Composite",
                    className: "CertificateAttributes"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const CertificateOperationUpdateParameter = {
    type: {
        name: "Composite",
        className: "CertificateOperationUpdateParameter",
        modelProperties: {
            cancellationRequested: {
                serializedName: "cancellation_requested",
                required: true,
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const CertificateMergeParameters = {
    type: {
        name: "Composite",
        className: "CertificateMergeParameters",
        modelProperties: {
            x509Certificates: {
                serializedName: "x5c",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "ByteArray"
                        }
                    }
                }
            },
            certificateAttributes: {
                serializedName: "attributes",
                type: {
                    name: "Composite",
                    className: "CertificateAttributes"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const BackupCertificateResult = {
    type: {
        name: "Composite",
        className: "BackupCertificateResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Base64Url"
                }
            }
        }
    }
};
export const CertificateRestoreParameters = {
    type: {
        name: "Composite",
        className: "CertificateRestoreParameters",
        modelProperties: {
            certificateBundleBackup: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Base64Url"
                }
            }
        }
    }
};
export const DeletedCertificateListResult = {
    type: {
        name: "Composite",
        className: "DeletedCertificateListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DeletedCertificateItem"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PendingCertificateSigningRequestResult = {
    type: {
        name: "Composite",
        className: "PendingCertificateSigningRequestResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DeletedCertificateItem = {
    type: {
        name: "Composite",
        className: "DeletedCertificateItem",
        modelProperties: Object.assign(Object.assign({}, CertificateItem.type.modelProperties), { recoveryId: {
                serializedName: "recoveryId",
                type: {
                    name: "String"
                }
            }, scheduledPurgeDate: {
                serializedName: "scheduledPurgeDate",
                readOnly: true,
                type: {
                    name: "UnixTime"
                }
            }, deletedDate: {
                serializedName: "deletedDate",
                readOnly: true,
                type: {
                    name: "UnixTime"
                }
            } })
    }
};
export const CertificateAttributes = {
    type: {
        name: "Composite",
        className: "CertificateAttributes",
        modelProperties: Object.assign(Object.assign({}, Attributes.type.modelProperties), { recoverableDays: {
                serializedName: "recoverableDays",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, recoveryLevel: {
                serializedName: "recoveryLevel",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const DeletedCertificateBundle = {
    type: {
        name: "Composite",
        className: "DeletedCertificateBundle",
        modelProperties: Object.assign(Object.assign({}, CertificateBundle.type.modelProperties), { recoveryId: {
                serializedName: "recoveryId",
                type: {
                    name: "String"
                }
            }, scheduledPurgeDate: {
                serializedName: "scheduledPurgeDate",
                readOnly: true,
                type: {
                    name: "UnixTime"
                }
            }, deletedDate: {
                serializedName: "deletedDate",
                readOnly: true,
                type: {
                    name: "UnixTime"
                }
            } })
    }
};
//# sourceMappingURL=mappers.js.map