{"version":3,"file":"parameters.js","sourceRoot":"","sources":["../../../../../src/generated/models/parameters.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  Contacts as ContactsMapper,\n  CertificateIssuerSetParameters as CertificateIssuerSetParametersMapper,\n  CertificateIssuerUpdateParameters as CertificateIssuerUpdateParametersMapper,\n  CertificateCreateParameters as CertificateCreateParametersMapper,\n  CertificateImportParameters as CertificateImportParametersMapper,\n  CertificatePolicy as CertificatePolicyMapper,\n  CertificateUpdateParameters as CertificateUpdateParametersMapper,\n  CertificateOperationUpdateParameter as CertificateOperationUpdateParameterMapper,\n  CertificateMergeParameters as CertificateMergeParametersMapper,\n  CertificateRestoreParameters as CertificateRestoreParametersMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const vaultBaseUrl: OperationURLParameter = {\n  parameterPath: \"vaultBaseUrl\",\n  mapper: {\n    serializedName: \"vaultBaseUrl\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const maxresults: OperationQueryParameter = {\n  parameterPath: [\"options\", \"maxresults\"],\n  mapper: {\n    constraints: {\n      InclusiveMaximum: 25,\n      InclusiveMinimum: 1\n    },\n    serializedName: \"maxresults\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const includePending: OperationQueryParameter = {\n  parameterPath: [\"options\", \"includePending\"],\n  mapper: {\n    serializedName: \"includePending\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    serializedName: \"api-version\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const certificateName: OperationURLParameter = {\n  parameterPath: \"certificateName\",\n  mapper: {\n    serializedName: \"certificate-name\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contacts: OperationParameter = {\n  parameterPath: \"contacts\",\n  mapper: ContactsMapper\n};\n\nexport const provider: OperationParameter = {\n  parameterPath: \"provider\",\n  mapper: CertificateIssuerSetParametersMapper\n};\n\nexport const credentials: OperationParameter = {\n  parameterPath: [\"options\", \"credentials\"],\n  mapper: CertificateIssuerSetParametersMapper\n};\n\nexport const organizationDetails: OperationParameter = {\n  parameterPath: [\"options\", \"organizationDetails\"],\n  mapper: CertificateIssuerSetParametersMapper\n};\n\nexport const attributes: OperationParameter = {\n  parameterPath: [\"options\", \"attributes\"],\n  mapper: CertificateIssuerSetParametersMapper\n};\n\nexport const issuerName: OperationURLParameter = {\n  parameterPath: \"issuerName\",\n  mapper: {\n    serializedName: \"issuer-name\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const provider1: OperationParameter = {\n  parameterPath: [\"options\", \"provider\"],\n  mapper: CertificateIssuerUpdateParametersMapper\n};\n\nexport const credentials1: OperationParameter = {\n  parameterPath: [\"options\", \"credentials\"],\n  mapper: CertificateIssuerUpdateParametersMapper\n};\n\nexport const organizationDetails1: OperationParameter = {\n  parameterPath: [\"options\", \"organizationDetails\"],\n  mapper: CertificateIssuerUpdateParametersMapper\n};\n\nexport const attributes1: OperationParameter = {\n  parameterPath: [\"options\", \"attributes\"],\n  mapper: CertificateIssuerUpdateParametersMapper\n};\n\nexport const certificatePolicy: OperationParameter = {\n  parameterPath: [\"options\", \"certificatePolicy\"],\n  mapper: CertificateCreateParametersMapper\n};\n\nexport const certificateAttributes: OperationParameter = {\n  parameterPath: [\"options\", \"certificateAttributes\"],\n  mapper: CertificateCreateParametersMapper\n};\n\nexport const tags: OperationParameter = {\n  parameterPath: [\"options\", \"tags\"],\n  mapper: CertificateCreateParametersMapper\n};\n\nexport const certificateName1: OperationURLParameter = {\n  parameterPath: \"certificateName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[0-9a-zA-Z-]+$\")\n    },\n    serializedName: \"certificate-name\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const base64EncodedCertificate: OperationParameter = {\n  parameterPath: \"base64EncodedCertificate\",\n  mapper: CertificateImportParametersMapper\n};\n\nexport const password: OperationParameter = {\n  parameterPath: [\"options\", \"password\"],\n  mapper: CertificateImportParametersMapper\n};\n\nexport const certificatePolicy1: OperationParameter = {\n  parameterPath: [\"options\", \"certificatePolicy\"],\n  mapper: CertificateImportParametersMapper\n};\n\nexport const certificateAttributes1: OperationParameter = {\n  parameterPath: [\"options\", \"certificateAttributes\"],\n  mapper: CertificateImportParametersMapper\n};\n\nexport const tags1: OperationParameter = {\n  parameterPath: [\"options\", \"tags\"],\n  mapper: CertificateImportParametersMapper\n};\n\nexport const certificatePolicy2: OperationParameter = {\n  parameterPath: \"certificatePolicy\",\n  mapper: CertificatePolicyMapper\n};\n\nexport const certificatePolicy3: OperationParameter = {\n  parameterPath: [\"options\", \"certificatePolicy\"],\n  mapper: CertificateUpdateParametersMapper\n};\n\nexport const certificateAttributes2: OperationParameter = {\n  parameterPath: [\"options\", \"certificateAttributes\"],\n  mapper: CertificateUpdateParametersMapper\n};\n\nexport const tags2: OperationParameter = {\n  parameterPath: [\"options\", \"tags\"],\n  mapper: CertificateUpdateParametersMapper\n};\n\nexport const certificateVersion: OperationURLParameter = {\n  parameterPath: \"certificateVersion\",\n  mapper: {\n    serializedName: \"certificate-version\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const cancellationRequested: OperationParameter = {\n  parameterPath: \"cancellationRequested\",\n  mapper: CertificateOperationUpdateParameterMapper\n};\n\nexport const x509Certificates: OperationParameter = {\n  parameterPath: \"x509Certificates\",\n  mapper: CertificateMergeParametersMapper\n};\n\nexport const certificateAttributes3: OperationParameter = {\n  parameterPath: [\"options\", \"certificateAttributes\"],\n  mapper: CertificateMergeParametersMapper\n};\n\nexport const tags3: OperationParameter = {\n  parameterPath: [\"options\", \"tags\"],\n  mapper: CertificateMergeParametersMapper\n};\n\nexport const certificateBundleBackup: OperationParameter = {\n  parameterPath: \"certificateBundleBackup\",\n  mapper: CertificateRestoreParametersMapper\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n"]}